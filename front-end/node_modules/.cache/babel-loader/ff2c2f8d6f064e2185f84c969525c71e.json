{"ast":null,"code":"var _jsxFileName = \"/home/igor/Documentos/Projetos Driven/projeto15-boardcamp/front-end/src/components/Form/Editable.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Editable(_ref) {\n  _s();\n\n  let {\n    value,\n    onChange,\n    children,\n    ...props\n  } = _ref;\n  const [editing, setEditing] = useState(false);\n  const [state, setState] = useState(value);\n  useEffect(() => {\n    if (!editing) {\n      setState(value);\n    }\n  });\n\n  function onKeyPress(event) {\n    if (event.key === 'Enter') {\n      onChange(state);\n      setEditing(false);\n    }\n  }\n\n  return editing ? /*#__PURE__*/_jsxDEV(Input, { ...props,\n    value: state,\n    onChange: e => setState(e.target.value),\n    onKeyPress: onKeyPress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: () => setEditing(true),\n    children: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Editable, \"+kNRBEuPTFoT8cS51RmUe2bHJ5g=\");\n\n_c = Editable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editable\");","map":{"version":3,"names":["useState","useEffect","Input","Editable","value","onChange","children","props","editing","setEditing","state","setState","onKeyPress","event","key","e","target","cursor"],"sources":["/home/igor/Documentos/Projetos Driven/projeto15-boardcamp/front-end/src/components/Form/Editable.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport Input from './Input';\n\nexport default function Editable ({ value, onChange, children, ...props }) {\n  const [editing, setEditing] = useState(false);\n  const [state, setState] = useState(value);\n\n  useEffect(() => {\n    if (!editing) {\n      setState(value);\n    }\n  });\n\n  function onKeyPress (event) {\n    if (event.key === 'Enter') {\n      onChange(state);\n      setEditing(false);\n    }\n  }\n\n  return (\n    editing\n    ? <Input {...props} value={state} onChange={e => setState(e.target.value)} onKeyPress={onKeyPress} />\n    : <span style={{ cursor: 'pointer' }} onClick={() => setEditing(true)}>{state}</span>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,SAASC,QAAT,OAA4D;EAAA;;EAAA,IAAzC;IAAEC,KAAF;IAASC,QAAT;IAAmBC,QAAnB;IAA6B,GAAGC;EAAhC,CAAyC;EACzE,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACI,KAAD,CAAlC;EAEAH,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,OAAL,EAAc;MACZG,QAAQ,CAACP,KAAD,CAAR;IACD;EACF,CAJQ,CAAT;;EAMA,SAASQ,UAAT,CAAqBC,KAArB,EAA4B;IAC1B,IAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;MACzBT,QAAQ,CAACK,KAAD,CAAR;MACAD,UAAU,CAAC,KAAD,CAAV;IACD;EACF;;EAED,OACED,OAAO,gBACL,QAAC,KAAD,OAAWD,KAAX;IAAkB,KAAK,EAAEG,KAAzB;IAAgC,QAAQ,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASZ,KAAV,CAAvD;IAAyE,UAAU,EAAEQ;EAArF;IAAA;IAAA;IAAA;EAAA,QADK,gBAEL;IAAM,KAAK,EAAE;MAAEK,MAAM,EAAE;IAAV,CAAb;IAAoC,OAAO,EAAE,MAAMR,UAAU,CAAC,IAAD,CAA7D;IAAA,UAAsEC;EAAtE;IAAA;IAAA;IAAA;EAAA,QAHJ;AAKD;;GAtBuBP,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}